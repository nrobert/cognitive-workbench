@using Orneholm.CognitiveWorkbench.Web.Extensions
@model Microsoft.Azure.CognitiveServices.Vision.ComputerVision.Models.ReadOperationResult

<div class="mb-5">
    <h4>Metadata</h4>

    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Key</th>
                <th>Value</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th>Status</th>
                <td>@Model.Status</td>
            </tr>
        </tbody>
    </table>
</div>


<div class="my-5">
    <h4>Lines</h4>

    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Rectangle</th>
                <th>Words</th>
            </tr>
        </thead>
        <tbody class="cwb-image-boxes-table" data-cwb-for=".cwb-image-boxes-read-lines">
            @foreach (var item in Model.AnalyzeResult.ReadResults)
            {
                foreach (var line in item.Lines)
                {
                    <tr>
                        <th>@line.BoundingBox.ToDescription()</th>
                        <td>@string.Join(" ", line.Words.Select(x => x.Text))</td>
                    </tr>
                }
            }
        </tbody>
    </table>

    @if (Model.AnalyzeResult.ReadResults == null || !Model.AnalyzeResult.ReadResults.Any())
    {
        <p class="p-2">
            No lines available.
        </p>
    }
</div>


<div class="mt-5">
    <h4>Words</h4>

    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Rectangle</th>
                <th>Text</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.AnalyzeResult.ReadResults)
            {
                foreach (var line in item.Lines)
                {
                    foreach (var word in line.Words)
                    {
                        <tr>
                            <th>@word.BoundingBox.ToDescription()</th>
                            <td>@word.Text</td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>

    @if (Model.AnalyzeResult.ReadResults == null || !Model.AnalyzeResult.ReadResults.Any())
    {
        <p class="p-2">
            No words available.
        </p>
    }
</div>
